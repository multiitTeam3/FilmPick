<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 네임스페이스는 풀클래스명을 써야한다 와 DTO 타입을 변경한 후 마이바티스 config 설정파일에 매퍼 부분은 지워주고, spring-context.xml에 매퍼 스캐닝을 추가해야 한다. -->
<mapper namespace="com.multi.mini.qna.model.mapper.QnaMapper">

	<resultMap id="memberResultMap" type="memberDTO">
		<result property="memberNo" column="member_no"/>
		<result property="userName" column="user_name"/>
	</resultMap>

	<resultMap id="QnaResultMap" type="qnaDTO">
		<id property="qna_no" column="qna_no" />
		<result property="category" column="category" />
		<result property="member_no" column="member_no" />
		<result property="memberEmail" column="email" />
		<result property="title" column="title" />
		<result property="content" column="content" />
		<result property="img" column="img" />
		<result property="writer" column="user_name" />
		<result property="isAnswer" column="is_answer" />
		<result property="create_date" column="create_date" />
		<result property="modify_date" column="modify_date" />
	</resultMap>


	<insert id="insertQna" parameterType="qnaDTO">
		INSERT INTO admin_question
		(
			category
			, member_no
			, title
			, content
			, img
		)
		VALUES
		(
			#{category}
			, #{ member_no }
			, #{ title }
			, #{ content }
			, #{ img }
		)
	</insert>

	<select id="selectAll" parameterType="int" resultMap="QnaResultMap">
		SELECT
			q.*
			, m.member_no
			, m.user_name
			, m.email
		FROM admin_question q
		JOIN mem_member m ON q.member_no = m.member_no
		WHERE q.member_no = #{member_no}
		ORDER BY q.qna_no DESC
	</select>

	<select id="selectQna" parameterType="int" resultMap="QnaResultMap">
		SELECT
		q.*
		, m.member_no
		, m.user_name
		, m.email
		FROM admin_question q
		JOIN mem_member m ON q.member_no = m.member_no
		WHERE q.qna_no = #{no}
		ORDER BY q.is_answer
	</select>

	<select id="findQnaListAll" resultMap="QnaResultMap">
		SELECT
			  q.*
			, m.member_no
			, m.user_name
			, m.email
		FROM
			admin_question q
		JOIN
			mem_member m ON q.member_no = m.member_no
		JOIN
			admin_question_category c ON q.category = c.category_no
		WHERE
		<choose>
			<when test="type == 'category'">
				c.description LIKE CONCAT('%', #{ keyword }, '%')
			</when>
			<when test="type == 'email'">
				m.email LIKE CONCAT('%', #{keyword}, '%')
			</when>
			<otherwise>
				1 = 1
			</otherwise>
		</choose>
		ORDER BY q.qna_no
		LIMIT #{start}, #{end}
	</select>




</mapper>